import matplotlib.pyplot as plt
from matplotlib import patches

lastDay = 375
beginPlot = -2
endPlot = 384
topPlot = 52000
bottomBannerBox = 48500

totalGained = 0
totalUsed = 0
lastAmount = 0

day_lis = []
primo_lis = []

pull_date = []
pull_amt = []


banner_tick = []
banner_labels = ["Shenhe\nXiao", "Zhongli\nGanyu","Yae Miko","Raiden\nKokomi","Ayato\nVenti","Ayaka","Yelan\nXiao","Itto","Kazuha\nKlee","Yoimiya","Tighnari\nZhongli","Ganyu\nKokomi","Cyno\nVenti","Nilou\nAlbedo","Nahida\nYoimiya","Yae Miko\nTartaglia","Wanderer\nItto","Raiden\nAyato"]

month_tick = [0,33,63,94,124,156,186,218,249,280,312,343]
month_labels = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]

infile_name = "primo_data.tsv"

infile = open(infile_name, 'r')

# Reading in data
i = 0
for line in infile:
    if (i == 0):
        i += 1
        continue
    if (i == lastDay):
        break
    split = line[:-1].split("\t")
    day_lis.append(float(split[1]))
    if (split[2] == "T"):
        banner_tick.append(i-1)

    amount = int(split[3])
    primo_lis.append(amount)
    if (i == 1):
        lastAmt = amount
    else:
        if (amount > lastAmt):
            totalGained += amount-lastAmt
            lastAmt = amount
        else:
            totalUsed += lastAmt - amount
            lastAmt = amount

    # Find and save pull dates
    if (primo_lis[i-1] < primo_lis[i-2]):
        pull_date.append((i-2,i-1))
        pull_amt.append((primo_lis[i-2],primo_lis[i-1]))
    i += 1
    

print("Total Amount of Primogems Gained:",totalGained)
print("Daily Average Primogems Gained:",totalGained/365.0)
print("Total Amount of Primogems Used:",totalUsed)
    
infile.close()

fig, ax = plt.subplots()


# Labeling the banners
for i in range(len(banner_labels)):
    if (i == len(banner_labels)-1):
        ax.text((banner_tick[i]+endPlot)/2,50000,banner_labels[i],horizontalalignment="center",verticalalignment="center")
    else:
        ax.text((banner_tick[i]+banner_tick[i+1])/2,50000,banner_labels[i],horizontalalignment="center",verticalalignment="center")
    plt.vlines(banner_tick[i],0,topPlot,linestyles="dotted",colors="black")

plt.hlines(0,0,endPlot,linestyles="dashed",colors="black")


# Plotting main curve
plt.plot(range(len(primo_lis)), primo_lis, lw=5, label="Primogems Gained")


# Overplotting pulls
for i in range(len(pull_date)):
    pull_start_date, pull_end_date = pull_date[i]
    pull_start_amt, pull_end_amt = pull_amt[i]
    if (i == 0): 
        plt.plot([pull_start_date, pull_end_date], [pull_start_amt, pull_end_amt], 'r', lw=4, label="Primogems Used")
    else:
        plt.plot([pull_start_date, pull_end_date], [pull_start_amt, pull_end_amt], 'r', lw=4)


# Background color for banner placements
ax.add_patch(patches.Rectangle((beginPlot,bottomBannerBox),endPlot-beginPlot,4000,color="g",alpha=0.2,label="Banners"))

# Place lines at start/end of year
plt.vlines(-1,0,bottomBannerBox,linestyles="solid",colors="black",lw=4)
plt.vlines(lastDay-1,0,bottomBannerBox,linestyles="solid",colors="black",lw=4,label="Start/End of Year")
        
# Setting global plot values
fig.set_size_inches(18,8)
fig.set_dpi(160)

ax.set_xticks(month_tick)
ax.set_xticklabels(month_labels)

plt.legend(loc="upper right", bbox_to_anchor=(0.97,0.92),framealpha=1.0)
plt.xlim(beginPlot,endPlot)
plt.ylim(0,topPlot)
plt.ylabel("Primogem Amount", fontsize=20)
plt.xlabel("Month", fontsize=20)
plt.show()
